@import './designSystem'

*, ::before, ::after
  box-sizing: border-box

html
  font-size: 16px

body
  margin: 0
  font-size: 16px
  word-break: keep-all
  -webkit-text-size-adjust: none
  transition: all .4s cubic-bezier(.4,0,.2,1),

body, pre, input, button, textarea, select
  font-size: 1rem
  font-weight: 400

body, body[data-theme="dark"]
  --txt-subject: #{$hex-light-subject}
  --txt-summary: #{$hex-light-summary}
  --txt-blockquote: #{$hex-white}
  --bg-primary: #{$hex-black}
  --bg-secondary: #{$hex-dark-background}
  --border: #{$hex-dark-border}
  --bg-primary-opacity: rgba(#{$hex-black, .8})

body[data-theme="light"]
  --txt-subject: #{$hex-dark-subject}
  --txt-summary: #{$hex-dark-summary}
  --txt-blockquote: #{$hex-black}
  --bg-primary: #{$hex-white}
  --bg-secondary: #{$hex-light-background}
  --border: #{$hex-light-border}
  --bg-primary-opacity: rgba(#{$hex-white, .8})

body
  background-color: var(--bg-primary)

main
  margin-top: rem(69)

  +mq(minLarge)
    margin-top: rem(102)

h1, h2, h3, h4, h5, h6
  margin-top: 0
  margin-bottom: 0

a
  text-decoration: none
  -webkit-tap-highlight-color: rgba(255,255,255,.10)

fieldset
  margin: 0
  padding: 0

legend
  position: absolute
  overflow: hidden
  margin: 0
  width: 1px
  height: 1px
  clip: rect(1px, 1px, 1px, 1px)

label
  cursor: pointer

img, fieldset
  border: 0

p, ul, dl, pre
  margin-top: 0
  margin-bottom: 0

ul, ol
  margin-top: 0
  margin-bottom: 0
  padding-left: 0
  list-style-type: none

dd
  margin-left: 0

button
  cursor: pointer
  border: 0
  padding: 0

figure
  margin: 0

address, cite
  font-style: normal

.ReactModal__Overlay
  padding: rem(25)

  +mq(minLarge)
    padding: rem(50)

.ReactModal__Content
  border-radius: rem(15)
  padding: rem(15)
  max-height: calc(100dvh - rem(25))

  +mq(minLarge)
    border-radius: rem(25)
    padding: rem(25)
    max-height: calc(100dvh - rem(50))

.ptr-element
  position: absolute
  top: 0
  left: 0
  width: 100%
  color: #aaa
  z-index: 10
  text-align: center
  height: rem(50)
  transition: all

  .genericon
    opacity: 0.6
    width: rem(24)
    height: rem(24)
    transition: all 0.25s ease
    transform: rotate(0deg)
    margin-top: rem(5)

    body &, body[data-theme="dark"] &
    background: url(/dark-arrow.svg) no-repeat 50% 50%/contain

    body[data-theme="light"] &
      background: url(/light-arrow.svg) no-repeat 50% 50%/contain

.ptr-refresh
  .ptr-element
    display: flex
    flex-direction: column
    align-items: center
    gap: rem(12)

.ptr-refresh .ptr-element .genericon
  transform: rotate(180deg)

.ptr-loading .ptr-element .genericon,
.ptr-reset .ptr-element .genericon
  display: none

.loading
  display: inline-block
  text-align: center
  opacity: 0.4
  display: none

  .ptr-loading &
    display: block

  span
    display: inline-block
    vertical-align: middle
    width: 10px
    height: 10px
    margin-right: 3px
    transform: scale(0.3)
    border-radius: 50%
    animation: ptr-loading 0.4s infinite alternate

  &-ptr-1
    animation-delay: 0 !important

  &-ptr-2
    animation-delay: 0.2s !important

  &-ptr-3
    animation-delay: 0.4s !important

@keyframes ptr-loading
  0%
    transform: translateY(0) scale(0.3)
    opacity: 0

  100%
    background-color: var(--txt-summary)
    transform: scale(1)
    opacity: 1

.ptr-loading .refresh-view,
.ptr-reset .refresh-view,
.ptr-loading .ptr-element,
.ptr-reset .ptr-element
  transition: all 0.25s ease

.ptr-reset .refresh-view
  transform: translate3d(0, 0, 0)

.ptr-loading .refresh-view
  transform: translate3d(0, 30px, 0)
